processing 0{'export': True, 'labels:label': 'Filesystem', 'type': 'File', 'flags:string[]': '', 'lineno:int': '', 'code': '', 'childnum:int': '', 'funcid:int': '', 'classname': '', 'namespace': '', 'endlineno:int': '', 'name': './example_1.js', 'doccomment': ''}
processing 1{'export': True, 'labels:label': 'AST', 'type': 'AST_TOPLEVEL', 'flags:string[]': 'TOPLEVEL_FILE', 'lineno:int': '1', 'code': '', 'childnum:int': '', 'funcid:int': '', 'classname': '', 'namespace': '1::31:43', 'endlineno:int': '31', 'name': './example_1.js', 'doccomment': '', 'HAVE_FUNC': '88'}
processing 5{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '1', 'code': "crypto = require('crypto')", 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:6:1:32', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 8{'export': True, 'labels:label': 'AST', 'type': 'AST_CALL', 'flags:string[]': 'JS_REQUIRE_BUILTIN', 'lineno:int': '1', 'code': "require('crypto')", 'childnum:int': '1', 'funcid:int': '1', 'classname': '', 'namespace': '1:15:1:32', 'endlineno:int': '1', 'name': 'built-in', 'doccomment': ''}
processing 9{'export': True, 'labels:label': 'AST', 'type': 'AST_NAME', 'flags:string[]': 'NAME_NOT_FQ', 'lineno:int': '1', 'code': '', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:15:1:32', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 12{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '1', 'code': 'crypto', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:23:1:31', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 6{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': 'JS_DECL_CONST', 'lineno:int': '1', 'code': '', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:6:1:12', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 13{'export': True, 'labels:label': 'AST', 'type': 'AST_FUNC_DECL', 'flags:string[]': '', 'lineno:int': '3', 'code': 'computeComplex', 'childnum:int': '1', 'funcid:int': '1', 'classname': '', 'namespace': '3::18:1', 'endlineno:int': '18', 'name': '', 'doccomment': ''}
processing 88{'export': True, 'labels:label': 'AST', 'type': 'AST_FUNC_DECL', 'flags:string[]': '', 'lineno:int': '20', 'code': 'processInputsAndCheckHash', 'childnum:int': '2', 'funcid:int': '1', 'classname': '', 'namespace': '20::29:1', 'endlineno:int': '29', 'name': '', 'doccomment': ''}
processing 162{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '31', 'code': 'module.exports = processInputsAndCheckHash', 'childnum:int': '3', 'funcid:int': '1', 'classname': '', 'namespace': '31::31:42', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 167{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '31', 'code': '', 'childnum:int': '1', 'funcid:int': '1', 'classname': '', 'namespace': '31:17:31:42', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 163{'export': True, 'labels:label': 'AST', 'type': 'AST_PROP', 'flags:string[]': '', 'lineno:int': '31', 'code': 'module.exports', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '31::31:14', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 164{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '31', 'code': '', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '31::31:6', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 166{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '31', 'code': 'exports', 'childnum:int': '1', 'funcid:int': '1', 'classname': '', 'namespace': '31:7:31:14', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 0{'export': True, 'labels:label': 'Filesystem', 'type': 'File', 'flags:string[]': '', 'lineno:int': '', 'code': '', 'childnum:int': '', 'funcid:int': '', 'classname': '', 'namespace': '', 'endlineno:int': '', 'name': 'stdin', 'doccomment': ''}
processing 1{'export': True, 'labels:label': 'AST', 'type': 'AST_TOPLEVEL', 'flags:string[]': 'TOPLEVEL_FILE', 'lineno:int': '1', 'code': '', 'childnum:int': '', 'funcid:int': '', 'classname': '', 'namespace': '1::1:40', 'endlineno:int': '1', 'name': 'stdin', 'doccomment': ''}
processing 5{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '1', 'code': "main_func=require('./example_1.js')", 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:4:1:39', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 8{'export': True, 'labels:label': 'AST', 'type': 'AST_CALL', 'flags:string[]': 'JS_REQUIRE_EXTERNAL', 'lineno:int': '1', 'code': "require('./example_1.js')", 'childnum:int': '1', 'funcid:int': '1', 'classname': '', 'namespace': '1:14:1:39', 'endlineno:int': '1', 'name': '/pppj/src/mutate/staticPlusSymbolic/example_1.js', 'doccomment': ''}
processing 9{'export': True, 'labels:label': 'AST', 'type': 'AST_NAME', 'flags:string[]': 'NAME_NOT_FQ', 'lineno:int': '1', 'code': '', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:14:1:39', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 12{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '1', 'code': './example_1.js', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:22:1:38', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 18{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '1', 'code': "crypto = require('crypto')", 'childnum:int': '0', 'funcid:int': '14', 'classname': '', 'namespace': '1:6:1:32', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 21{'export': True, 'labels:label': 'AST', 'type': 'AST_CALL', 'flags:string[]': 'JS_REQUIRE_BUILTIN', 'lineno:int': '1', 'code': "require('crypto')", 'childnum:int': '1', 'funcid:int': '14', 'classname': '', 'namespace': '1:15:1:32', 'endlineno:int': '1', 'name': 'built-in', 'doccomment': ''}
processing 22{'export': True, 'labels:label': 'AST', 'type': 'AST_NAME', 'flags:string[]': 'NAME_NOT_FQ', 'lineno:int': '1', 'code': '', 'childnum:int': '0', 'funcid:int': '14', 'classname': '', 'namespace': '1:15:1:32', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 25{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '1', 'code': 'crypto', 'childnum:int': '0', 'funcid:int': '14', 'classname': '', 'namespace': '1:23:1:31', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 19{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': 'JS_DECL_CONST', 'lineno:int': '1', 'code': '', 'childnum:int': '0', 'funcid:int': '14', 'classname': '', 'namespace': '1:6:1:12', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
processing 26{'export': True, 'labels:label': 'AST', 'type': 'AST_FUNC_DECL', 'flags:string[]': '', 'lineno:int': '3', 'code': 'computeComplex', 'childnum:int': '1', 'funcid:int': '14', 'classname': '', 'namespace': '3::18:1', 'endlineno:int': '18', 'name': '', 'doccomment': ''}
processing 101{'export': True, 'labels:label': 'AST', 'type': 'AST_FUNC_DECL', 'flags:string[]': '', 'lineno:int': '20', 'code': 'processInputsAndCheckHash', 'childnum:int': '2', 'funcid:int': '14', 'classname': '', 'namespace': '20::29:1', 'endlineno:int': '29', 'name': '', 'doccomment': ''}
processing 175{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '31', 'code': 'module.exports = processInputsAndCheckHash', 'childnum:int': '3', 'funcid:int': '14', 'classname': '', 'namespace': '31::31:42', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 180{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '31', 'code': '', 'childnum:int': '1', 'funcid:int': '14', 'classname': '', 'namespace': '31:17:31:42', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 176{'export': True, 'labels:label': 'AST', 'type': 'AST_PROP', 'flags:string[]': '', 'lineno:int': '31', 'code': 'module.exports', 'childnum:int': '0', 'funcid:int': '14', 'classname': '', 'namespace': '31::31:14', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 177{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '31', 'code': '', 'childnum:int': '0', 'funcid:int': '14', 'classname': '', 'namespace': '31::31:6', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 179{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '31', 'code': 'exports', 'childnum:int': '1', 'funcid:int': '14', 'classname': '', 'namespace': '31:7:31:14', 'endlineno:int': '31', 'name': '', 'doccomment': ''}
processing 116{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '21', 'code': 'C = computeComplex(A, B)', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '21:8:21:32', 'endlineno:int': '21', 'name': '', 'doccomment': ''}
processing 119{'export': True, 'labels:label': 'AST', 'type': 'AST_CALL', 'flags:string[]': '', 'lineno:int': '21', 'code': 'computeComplex(A, B)', 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '21:12:21:32', 'endlineno:int': '21', 'name': '', 'doccomment': ''}
processing 120{'export': True, 'labels:label': 'AST', 'type': 'AST_NAME', 'flags:string[]': 'NAME_NOT_FQ', 'lineno:int': '21', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '21:12:21:32', 'endlineno:int': '21', 'name': '', 'doccomment': ''}
processing 123{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '21', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '21:27:21:28', 'endlineno:int': '21', 'name': '', 'doccomment': ''}
processing 125{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '21', 'code': '', 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '21:30:21:31', 'endlineno:int': '21', 'name': '', 'doccomment': ''}
processing 41{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '4', 'code': 'result = 0', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '4:8:4:18', 'endlineno:int': '4', 'name': '', 'doccomment': ''}
processing 44{'export': True, 'labels:label': 'AST', 'type': 'integer', 'flags:string[]': '', 'lineno:int': '4', 'code': '0', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '4:17:4:18', 'endlineno:int': '4', 'name': '', 'doccomment': ''}
processing 42{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': 'JS_DECL_LET', 'lineno:int': '4', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '4:8:4:14', 'endlineno:int': '4', 'name': '', 'doccomment': ''}
processing 45{'export': True, 'labels:label': 'AST', 'type': 'AST_IF', 'flags:string[]': '', 'lineno:int': '5', 'code': '', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '5:4:15:5', 'endlineno:int': '15', 'name': '', 'doccomment': ''}
processing 48{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '5', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '5:8:5:9', 'endlineno:int': '5', 'name': '', 'doccomment': ''}
processing 50{'export': True, 'labels:label': 'AST', 'type': 'integer', 'flags:string[]': '', 'lineno:int': '5', 'code': '3', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '5:10:5:11', 'endlineno:int': '5', 'name': '', 'doccomment': ''}
processing 47{'export': True, 'labels:label': 'AST', 'type': 'AST_BINARY_OP', 'flags:string[]': '', 'lineno:int': '5', 'code': 'A>3', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '5:8:5:11', 'endlineno:int': '5', 'name': '', 'doccomment': ''}
processing 52{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '6', 'code': 'B=B*A', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '6:8:6:13', 'endlineno:int': '6', 'name': '', 'doccomment': ''}
processing 55{'export': True, 'labels:label': 'AST', 'type': 'AST_BINARY_OP', 'flags:string[]': 'BINARY_MUL', 'lineno:int': '6', 'code': 'B*A', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '6:10:6:13', 'endlineno:int': '6', 'name': '', 'doccomment': ''}
processing 53{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '6', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '6:8:6:9', 'endlineno:int': '6', 'name': '', 'doccomment': ''}
processing 63{'export': True, 'labels:label': 'AST', 'type': 'AST_IF', 'flags:string[]': '', 'lineno:int': '9', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '9:8:14:9', 'endlineno:int': '14', 'name': '', 'doccomment': ''}
processing 66{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '9', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '9:12:9:13', 'endlineno:int': '9', 'name': '', 'doccomment': ''}
processing 68{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '9', 'code': '', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '9:14:9:15', 'endlineno:int': '9', 'name': '', 'doccomment': ''}
processing 65{'export': True, 'labels:label': 'AST', 'type': 'AST_BINARY_OP', 'flags:string[]': '', 'lineno:int': '9', 'code': 'B>A', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '9:12:9:15', 'endlineno:int': '9', 'name': '', 'doccomment': ''}
processing 71{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '10', 'code': 'A=A-1', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '10:12:10:17', 'endlineno:int': '10', 'name': '', 'doccomment': ''}
processing 74{'export': True, 'labels:label': 'AST', 'type': 'AST_BINARY_OP', 'flags:string[]': 'BINARY_SUB', 'lineno:int': '10', 'code': 'A-1', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '10:14:10:17', 'endlineno:int': '10', 'name': '', 'doccomment': ''}
processing 75{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '10', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '10:14:10:15', 'endlineno:int': '10', 'name': '', 'doccomment': ''}
processing 77{'export': True, 'labels:label': 'AST', 'type': 'integer', 'flags:string[]': '', 'lineno:int': '10', 'code': '1', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '10:16:10:17', 'endlineno:int': '10', 'name': '', 'doccomment': ''}
processing 72{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '10', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '10:12:10:13', 'endlineno:int': '10', 'name': '', 'doccomment': ''}
processing 81{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '13', 'code': 'A=2*A', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '13:12:13:17', 'endlineno:int': '13', 'name': '', 'doccomment': ''}
processing 84{'export': True, 'labels:label': 'AST', 'type': 'AST_BINARY_OP', 'flags:string[]': 'BINARY_MUL', 'lineno:int': '13', 'code': '2*A', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '13:14:13:17', 'endlineno:int': '13', 'name': '', 'doccomment': ''}
processing 82{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '13', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '13:12:13:13', 'endlineno:int': '13', 'name': '', 'doccomment': ''}
processing 88{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '16', 'code': 'result=A+B', 'childnum:int': '2', 'funcid:int': '26', 'classname': '', 'namespace': '16:4:16:14', 'endlineno:int': '16', 'name': '', 'doccomment': ''}
processing 91{'export': True, 'labels:label': 'AST', 'type': 'AST_BINARY_OP', 'flags:string[]': 'BINARY_ADD', 'lineno:int': '16', 'code': 'A+B', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '16:11:16:14', 'endlineno:int': '16', 'name': '', 'doccomment': ''}
processing 92{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '16', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '16:11:16:12', 'endlineno:int': '16', 'name': '', 'doccomment': ''}
processing 94{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '16', 'code': '', 'childnum:int': '1', 'funcid:int': '26', 'classname': '', 'namespace': '16:13:16:14', 'endlineno:int': '16', 'name': '', 'doccomment': ''}
processing 89{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '16', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '16:4:16:10', 'endlineno:int': '16', 'name': '', 'doccomment': ''}
processing 96{'export': True, 'labels:label': 'AST', 'type': 'AST_RETURN', 'flags:string[]': '', 'lineno:int': '17', 'code': 'return result;', 'childnum:int': '3', 'funcid:int': '26', 'classname': '', 'namespace': '17:4:17:18', 'endlineno:int': '17', 'name': '', 'doccomment': ''}
processing 97{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '17', 'code': '', 'childnum:int': '0', 'funcid:int': '26', 'classname': '', 'namespace': '17:11:17:17', 'endlineno:int': '17', 'name': '', 'doccomment': ''}
processing 117{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': 'JS_DECL_LET', 'lineno:int': '21', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '21:8:21:9', 'endlineno:int': '21', 'name': '', 'doccomment': ''}
processing 127{'export': True, 'labels:label': 'AST', 'type': 'AST_ASSIGN', 'flags:string[]': '', 'lineno:int': '22', 'code': "expectedHash = 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3'", 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '22:8:22:89', 'endlineno:int': '22', 'name': '', 'doccomment': ''}
processing 130{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '22', 'code': 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '22:23:22:89', 'endlineno:int': '22', 'name': '', 'doccomment': ''}
processing 128{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': 'JS_DECL_LET', 'lineno:int': '22', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '22:8:22:20', 'endlineno:int': '22', 'name': '', 'doccomment': ''}
processing 131{'export': True, 'labels:label': 'AST', 'type': 'AST_CALL', 'flags:string[]': '', 'lineno:int': '23', 'code': 'sink_jsfuzz(C)', 'childnum:int': '2', 'funcid:int': '101', 'classname': '', 'namespace': '23:4:23:18', 'endlineno:int': '23', 'name': '', 'doccomment': ''}
processing 132{'export': True, 'labels:label': 'AST', 'type': 'AST_NAME', 'flags:string[]': 'NAME_NOT_FQ', 'lineno:int': '23', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '23:4:23:18', 'endlineno:int': '23', 'name': '', 'doccomment': ''}
processing 135{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '23', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '23:16:23:17', 'endlineno:int': '23', 'name': '', 'doccomment': ''}
processing 137{'export': True, 'labels:label': 'AST', 'type': 'AST_IF', 'flags:string[]': '', 'lineno:int': '24', 'code': '', 'childnum:int': '3', 'funcid:int': '101', 'classname': '', 'namespace': '24:4:28:5', 'endlineno:int': '28', 'name': '', 'doccomment': ''}
processing 140{'export': True, 'labels:label': 'AST', 'type': 'AST_METHOD_CALL', 'flags:string[]': '', 'lineno:int': '24', 'code': "crypto.createHash('sha256').update(String(C)).digest('hex')", 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:8:24:67', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 141{'export': True, 'labels:label': 'AST', 'type': 'AST_METHOD_CALL', 'flags:string[]': '', 'lineno:int': '24', 'code': "crypto.createHash('sha256').update(String(C))", 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:8:24:53', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 142{'export': True, 'labels:label': 'AST', 'type': 'AST_METHOD_CALL', 'flags:string[]': '', 'lineno:int': '24', 'code': "crypto.createHash('sha256')", 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:8:24:35', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 143{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '24', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:8:24:14', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 145{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '24', 'code': 'createHash', 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '24:15:24:25', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 147{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '24', 'code': 'sha256', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:26:24:34', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 148{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '24', 'code': 'update', 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '24:36:24:42', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 150{'export': True, 'labels:label': 'AST', 'type': 'AST_CALL', 'flags:string[]': '', 'lineno:int': '24', 'code': 'String(C)', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:43:24:52', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 151{'export': True, 'labels:label': 'AST', 'type': 'AST_NAME', 'flags:string[]': 'NAME_NOT_FQ', 'lineno:int': '24', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:43:24:52', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 154{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '24', 'code': '', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:50:24:51', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 156{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '24', 'code': 'digest', 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '24:54:24:60', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 158{'export': True, 'labels:label': 'AST', 'type': 'string', 'flags:string[]': '', 'lineno:int': '24', 'code': 'hex', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '24:61:24:66', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 159{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': '', 'lineno:int': '24', 'code': '', 'childnum:int': '1', 'funcid:int': '101', 'classname': '', 'namespace': '24:72:24:84', 'endlineno:int': '24', 'name': '', 'doccomment': ''}
processing 162{'export': True, 'labels:label': 'AST', 'type': 'AST_RETURN', 'flags:string[]': '', 'lineno:int': '25', 'code': 'return true;', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '25:8:25:20', 'endlineno:int': '25', 'name': '', 'doccomment': 'We want to generate new inputs to satisfy this complex condition'}
processing 163{'export': True, 'labels:label': 'AST', 'type': 'AST_CONST', 'flags:string[]': '', 'lineno:int': '25', 'code': 'true', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '25::25:', 'endlineno:int': '', 'name': '', 'doccomment': ''}
processing 169{'export': True, 'labels:label': 'AST', 'type': 'AST_RETURN', 'flags:string[]': '', 'lineno:int': '27', 'code': 'return false;', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '27:8:27:21', 'endlineno:int': '27', 'name': '', 'doccomment': ''}
processing 170{'export': True, 'labels:label': 'AST', 'type': 'AST_CONST', 'flags:string[]': '', 'lineno:int': '27', 'code': 'false', 'childnum:int': '0', 'funcid:int': '101', 'classname': '', 'namespace': '27::27:', 'endlineno:int': '', 'name': '', 'doccomment': ''}
processing 6{'export': True, 'labels:label': 'AST', 'type': 'AST_VAR', 'flags:string[]': 'JS_DECL_VAR', 'lineno:int': '1', 'code': '', 'childnum:int': '0', 'funcid:int': '1', 'classname': '', 'namespace': '1:4:1:13', 'endlineno:int': '1', 'name': '', 'doccomment': ''}
